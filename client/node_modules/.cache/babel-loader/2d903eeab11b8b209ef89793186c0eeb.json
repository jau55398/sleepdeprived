{"ast":null,"code":"import axios from'axios';import{LOGIN_USER,REGISTER_USER,AUTH_USER,LOGOUT_USER,ADD_TO_CART_USER,GET_CART_ITEMS_USER}from'./types';import{USER_SERVER}from'../components/Config.js';export function registerUser(dataToSubmit){var request=axios.post(\"\".concat(USER_SERVER,\"/register\"),dataToSubmit).then(function(response){return response.data;});return{type:REGISTER_USER,payload:request};}export function loginUser(dataToSubmit){var request=axios.post(\"\".concat(USER_SERVER,\"/login\"),dataToSubmit).then(function(response){return response.data;});return{type:LOGIN_USER,payload:request};}export function auth(){var request=axios.get(\"\".concat(USER_SERVER,\"/auth\")).then(function(response){return response.data;});return{type:AUTH_USER,payload:request};}export function logoutUser(){var request=axios.get(\"\".concat(USER_SERVER,\"/logout\")).then(function(response){return response.data;});return{type:LOGOUT_USER,payload:request};}export function addToCart(_id){var request=axios.get(\"\".concat(USER_SERVER,\"/addToCart?productId=\").concat(_id)).then(function(response){return response.data;});return{type:ADD_TO_CART_USER,payload:request};}// redux cart detail\nexport function getCartItems(cartItems,userCart){var request=axios.get(\"/api/product/products_by_id?id=\".concat(cartItems,\"&type=array\")).then(function(response){userCart.forEach(function(cartItem){response.data.forEach(function(productDetail,i){if(cartItem.id===productDetail._id){response.data[i].quantity=cartItem.quantity;}});});return response.data;});return{type:GET_CART_ITEMS_USER,payload:request};}","map":{"version":3,"sources":["C:/Users/jau55/git/sleepdeprived/client/src/_actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","USER_SERVER","registerUser","dataToSubmit","request","post","then","response","data","type","payload","loginUser","auth","get","logoutUser","addToCart","_id","getCartItems","cartItems","userCart","forEach","cartItem","productDetail","i","id","quantity"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,UADJ,CAEIC,aAFJ,CAGIC,SAHJ,CAIIC,WAJJ,CAKIC,gBALJ,CAMIC,mBANJ,KAQO,SARP,CASA,OAASC,WAAT,KAA4B,yBAA5B,CAEA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,YAAtB,CAAoC,CACvC,GAAMC,CAAAA,OAAO,CAAGV,KAAK,CAACW,IAAN,WAAcJ,WAAd,cAAsCE,YAAtC,EACXG,IADW,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADF,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEb,aADH,CAEHc,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASO,CAAAA,SAAT,CAAmBR,YAAnB,CAAiC,CACpC,GAAMC,CAAAA,OAAO,CAAGV,KAAK,CAACW,IAAN,WAAcJ,WAAd,WAAmCE,YAAnC,EACXG,IADW,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADF,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEd,UADH,CAEHe,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASQ,CAAAA,IAAT,EAAgB,CACnB,GAAMR,CAAAA,OAAO,CAAGV,KAAK,CAACmB,GAAN,WAAaZ,WAAb,WACXK,IADW,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADF,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEZ,SADH,CAEHa,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASU,CAAAA,UAAT,EAAsB,CACzB,GAAMV,CAAAA,OAAO,CAAGV,KAAK,CAACmB,GAAN,WAAaZ,WAAb,aACXK,IADW,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADF,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEX,WADH,CAEHY,OAAO,CAAEN,OAFN,CAAP,CAIH,CAED,MAAO,SAASW,CAAAA,SAAT,CAAmBC,GAAnB,CAAwB,CAC3B,GAAMZ,CAAAA,OAAO,CAAGV,KAAK,CAACmB,GAAN,WAAaZ,WAAb,iCAAgDe,GAAhD,GACXV,IADW,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADF,CAAhB,CAGA,MAAO,CACHC,IAAI,CAAEV,gBADH,CAEHW,OAAO,CAAEN,OAFN,CAAP,CAIH,CACD;AAEA,MAAO,SAASa,CAAAA,YAAT,CAAsBC,SAAtB,CAAiCC,QAAjC,CAA2C,CAC9C,GAAMf,CAAAA,OAAO,CAAGV,KAAK,CAACmB,GAAN,0CAA4CK,SAA5C,iBACXZ,IADW,CACN,SAAAC,QAAQ,CAAI,CAGdY,QAAQ,CAACC,OAAT,CAAiB,SAAAC,QAAQ,CAAI,CACzBd,QAAQ,CAACC,IAAT,CAAcY,OAAd,CAAsB,SAACE,aAAD,CAAgBC,CAAhB,CAAsB,CACxC,GAAIF,QAAQ,CAACG,EAAT,GAAgBF,aAAa,CAACN,GAAlC,CAAuC,CACnCT,QAAQ,CAACC,IAAT,CAAce,CAAd,EAAiBE,QAAjB,CAA4BJ,QAAQ,CAACI,QAArC,CACH,CACJ,CAJD,EAKH,CAND,EAQA,MAAOlB,CAAAA,QAAQ,CAACC,IAAhB,CACH,CAbW,CAAhB,CAeA,MAAO,CACHC,IAAI,CAAET,mBADH,CAEHU,OAAO,CAAEN,OAFN,CAAP,CAIH","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART_USER,\r\n    GET_CART_ITEMS_USER\r\n\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addToCart(_id) {\r\n    const request = axios.get(`${USER_SERVER}/addToCart?productId=${_id}`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ADD_TO_CART_USER,\r\n        payload: request\r\n    }\r\n}\r\n// redux cart detail\r\n\r\nexport function getCartItems(cartItems, userCart) {\r\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\r\n        .then(response => {\r\n\r\n\r\n            userCart.forEach(cartItem => {\r\n                response.data.forEach((productDetail, i) => {\r\n                    if (cartItem.id === productDetail._id) {\r\n                        response.data[i].quantity = cartItem.quantity;\r\n                    }\r\n                })\r\n            })\r\n\r\n            return response.data;\r\n        });\r\n\r\n    return {\r\n        type: GET_CART_ITEMS_USER,\r\n        payload: request\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}