{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jau55\\\\git\\\\gita\\\\sp2020_csc190_team-7\\\\reactproject\\\\client\\\\src\\\\components\\\\views\\\\RegisterPage\\\\RegisterPage.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport '../../App.css';\nimport '../../Form.css';\nimport { Form, Input } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      lastName: '',\n      name: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is required'),\n      lastName: Yup.string().required('Last Name is required'),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password,\n          name: values.name,\n          lastname: values.lastname,\n          image: null\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            props.history.push(\"/\");\n          } else {\n            alert(response.payload.err.errmsg);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"FIRST NAME\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"name\",\n      placeholder: \"Enter your First Name\",\n      type: \"text\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        display: \"inline-block\",\n        marginleft: \"auto\",\n        marginright: \"auto\",\n        paddingleft: \"10px\",\n        outline: \"black\",\n        borderradius: \"2px\",\n        height: \"40px\",\n        width: \"102%\"\n      },\n      className: errors.name && touched.name ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, errors.name))), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"LAST NAME\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"lastName\",\n      placeholder: \"Enter your Last Name\",\n      type: \"text\",\n      value: values.lastName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        display: \"inline-block\",\n        marginleft: \"auto\",\n        marginright: \"auto\",\n        paddingleft: \"10px\",\n        outline: \"black\",\n        borderradius: \"2px\",\n        height: \"40px\",\n        width: \"102%\"\n      },\n      className: errors.lastName && touched.lastName ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, errors.lastName))), /*#__PURE__*/React.createElement(Form.Item, {\n      hasFeedback: true,\n      validateStatus: errors.email && touched.email ? \"error\" : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"EMAIL\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"email\",\n      placeholder: \"Enter your Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        display: \"inline-block\",\n        marginleft: \"auto\",\n        marginright: \"auto\",\n        paddingleft: \"10px\",\n        outline: \"black\",\n        borderradius: \"2px\",\n        height: \"40px\",\n        width: \"102%\"\n      },\n      className: errors.email && touched.email ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, errors.email))), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      hasFeedback: true,\n      validateStatus: errors.password && touched.password ? \"error\" : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        display: \"inline-block\",\n        marginleft: \"auto\",\n        marginright: \"auto\",\n        paddingleft: \"10px\",\n        outline: \"black\",\n        borderradius: \"2px\",\n        height: \"40px\",\n        width: \"102%\"\n      },\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, errors.password))), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }, \"CONFIRM PASSWORD\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"confirmPassword\",\n      placeholder: \"Enter your confirmPassword\",\n      type: \"password\",\n      value: values.confirmPassword,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        display: \"inline-block\",\n        marginleft: \"auto\",\n        marginright: \"auto\",\n        paddingleft: \"10px\",\n        outline: \"black\",\n        borderradius: \"2px\",\n        height: \"40px\",\n        width: \"102%\"\n      },\n      className: errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 19\n      }\n    }, errors.confirmPassword))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleSubmit,\n      type: \"primary\",\n      disabled: isSubmitting,\n      className: \"form-input-btn\",\n      style: {\n        width: \"102%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, \"CREATE ACCOUNT\"))))));\n  });\n}\n\n;\nexport default RegisterPage;","map":{"version":3,"sources":["C:/Users/jau55/git/gita/sp2020_csc190_team-7/reactproject/client/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","moment","Formik","Yup","registerUser","useDispatch","Form","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","dispatch","email","lastName","name","password","confirmPassword","object","shape","string","required","min","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","lastname","image","then","response","payload","success","history","push","alert","err","errmsg","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","display","marginleft","marginright","paddingleft","outline","borderradius","height","width","color","paddingTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport '../../App.css';\r\nimport '../../Form.css';\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: null\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <p className=\"heading\">Create Account</p>\r\n\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n              <Form.Item required>\r\n                <label className=\"form-label1\">\r\n                  FIRST NAME\r\n                </label>\r\n              <div className=\"form-input\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your First Name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    marginleft: \"auto\",\r\n                    marginright: \"auto\",\r\n                    paddingleft: \"10px\",\r\n                    outline: \"black\",\r\n                    borderradius: \"2px\",\r\n                    height: \"40px\",\r\n                    width: \"102%\"\r\n                  }}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div \r\n                    className=\"input-feedback\"\r\n                    style={{color: 'red'}}\r\n                  >\r\n                    {errors.name}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <label className=\"form-label\">\r\n                  LAST NAME\r\n                </label>\r\n\r\n              <div className=\"form-input\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    marginleft: \"auto\",\r\n                    marginright: \"auto\",\r\n                    paddingleft: \"10px\",\r\n                    outline: \"black\",\r\n                    borderradius: \"2px\",\r\n                    height: \"40px\",\r\n                    width: \"102%\"\r\n                  }}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div \r\n                  className=\"input-feedback\"\r\n                  style={{color: 'red'}}\r\n                  >\r\n                    {errors.lastName}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              </Form.Item>\r\n\r\n              <Form.Item hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <label className=\"form-label\">\r\n                  EMAIL\r\n                </label>\r\n              \r\n              <div className=\"form-input\">\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    marginleft: \"auto\",\r\n                    marginright: \"auto\",\r\n                    paddingleft: \"10px\",\r\n                    outline: \"black\",\r\n                    borderradius: \"2px\",\r\n                    height: \"40px\",\r\n                    width: \"102%\"\r\n                  }}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div \r\n                  className=\"input-feedback\"\r\n                  style={{color: 'red'}}\r\n                  >\r\n                  {errors.email}\r\n                </div>\r\n                )}\r\n              </div>\r\n              </Form.Item>\r\n\r\n              <Form.Item required hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <label className=\"form-label\">\r\n                  PASSWORD\r\n                </label>\r\n\r\n              <div className=\"form-input\">\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    marginleft: \"auto\",\r\n                    marginright: \"auto\",\r\n                    paddingleft: \"10px\",\r\n                    outline: \"black\",\r\n                    borderradius: \"2px\",\r\n                    height: \"40px\",\r\n                    width: \"102%\"\r\n                  }}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div \r\n                  className=\"input-feedback\"\r\n                  style={{color: 'red'}}\r\n                  >\r\n                  {errors.password}\r\n                </div>\r\n                )}\r\n              </div>\r\n              </Form.Item>\r\n\r\n              <Form.Item required hasFeedback>\r\n                <label className=\"form-label\">\r\n                  CONFIRM PASSWORD\r\n                </label>\r\n\r\n              <div className=\"form-input\">\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    marginleft: \"auto\",\r\n                    marginright: \"auto\",\r\n                    paddingleft: \"10px\",\r\n                    outline: \"black\",\r\n                    borderradius: \"2px\",\r\n                    height: \"40px\",\r\n                    width: \"102%\"\r\n                  }}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div \r\n                  className=\"input-feedback\"\r\n                  style={{color: 'red'}}\r\n                >\r\n                  {errors.confirmPassword}\r\n                </div>\r\n                )}\r\n              </div>\r\n              </Form.Item>\r\n\r\n              <div className=\"form-input\">\r\n              <Form.Item>\r\n              <div style={{paddingTop: \"30px\"}}>\r\n                <button \r\n                  onClick={handleSubmit} \r\n                  type=\"primary\" \r\n                  disabled={isSubmitting}\r\n                  className=\"form-input-btn\"\r\n                  style={{width:\"102%\"}}\r\n                  >\r\n                  CREATE ACCOUNT\r\n                </button>\r\n                </div>\r\n              </Form.Item>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n"]},"metadata":{},"sourceType":"module"}