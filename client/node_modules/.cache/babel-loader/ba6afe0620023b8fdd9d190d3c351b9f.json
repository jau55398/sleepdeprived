{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\jau55\\\\git\\\\sleepdeprived\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{withRouter}from\"react-router-dom\";import{loginUser}from\"../../../_actions/user_actions\";import{Formik}from'formik';import*as Yup from'yup';import{Form,Checkbox,Typography}from'antd';import Icon from'@ant-design/icons';import{useDispatch}from\"react-redux\";import'../../App.css';import'../../Form.css';var Title=Typography.Title;function LoginPage(props){var dispatch=useDispatch();var rememberMeChecked=localStorage.getItem(\"rememberMe\")?true:false;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),formErrorMessage=_useState2[0],setFormErrorMessage=_useState2[1];var _useState3=useState(rememberMeChecked),_useState4=_slicedToArray(_useState3,2),rememberMe=_useState4[0],setRememberMe=_useState4[1];var handleRememberMe=function handleRememberMe(){setRememberMe(!rememberMe);};var initialEmail=localStorage.getItem(\"rememberMe\")?localStorage.getItem(\"rememberMe\"):'';return/*#__PURE__*/React.createElement(Formik,{initialValues:{email:initialEmail,password:''},validationSchema:Yup.object().shape({email:Yup.string().email('Email is invalid').required('Email is required'),password:Yup.string().min(6,'Password must be at least 6 characters').required('Password is required')}),onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setTimeout(function(){var dataToSubmit={email:values.email,password:values.password};dispatch(loginUser(dataToSubmit)).then(function(response){if(response.payload.loginSuccess){window.localStorage.setItem('userId',response.payload.userId);if(rememberMe===true){window.localStorage.setItem('rememberMe',values.id);}else{localStorage.removeItem('rememberMe');}props.history.push(\"/\");}else{setFormErrorMessage('Check out your Account or Password again');}}).catch(function(err){setFormErrorMessage('Check out your Account or Password again');setTimeout(function(){setFormErrorMessage(\"\");},3000);});setSubmitting(false);},500);}},function(props){var values=props.values,touched=props.touched,errors=props.errors,dirty=props.dirty,isSubmitting=props.isSubmitting,handleChange=props.handleChange,handleBlur=props.handleBlur,handleSubmit=props.handleSubmit,handleReset=props.handleReset;return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"p\",{className:\"heading\"},\"Log In\"),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:handleSubmit,style:{width:'102%'}},/*#__PURE__*/React.createElement(Form.Item,{required:true},/*#__PURE__*/React.createElement(\"label\",{className:\"form-label1\"},\"EMAIL\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-input\"},/*#__PURE__*/React.createElement(\"input\",{id:\"email\",prefix:/*#__PURE__*/React.createElement(Icon,{type:\"user\",style:{color:'rgba(0,0,0,.25)'}}),placeholder:\"Enter your email\",type:\"email\",value:values.email,onChange:handleChange,onBlur:handleBlur,style:{display:\"inline-block\",marginleft:\"auto\",marginright:\"auto\",paddingleft:\"10px\",outline:\"black\",borderradius:\"2px\",height:\"40px\",width:\"102%\"},className:errors.email&&touched.email?'text-input error':'text-input'}),errors.email&&touched.email&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-feedback\",style:{color:'red'}},errors.email))),/*#__PURE__*/React.createElement(Form.Item,{required:true},/*#__PURE__*/React.createElement(\"label\",{className:\"form-label\"},\"PASSWORD\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-input\"},/*#__PURE__*/React.createElement(\"input\",{id:\"password\",prefix:/*#__PURE__*/React.createElement(Icon,{type:\"lock\",style:{color:'rgba(0,0,0,.25)'}}),placeholder:\"Enter your password\",type:\"password\",value:values.password,onChange:handleChange,onBlur:handleBlur,style:{display:\"inline-block\",marginleft:\"auto\",marginright:\"auto\",paddingleft:\"10px\",outline:\"black\",borderradius:\"2px\",height:\"40px\",width:\"102%\"},className:errors.password&&touched.password?'text-input error':'text-input'}),errors.password&&touched.password&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-feedback\",style:{color:'red'}},errors.password))),formErrorMessage&&/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"p\",{style:{color:'#ff0000bf',fontSize:'0.7rem',border:'1px solid',padding:'1rem',borderRadius:'10px'}},formErrorMessage)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-input\",style:{paddingTop:\"30px\"}},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Checkbox,{id:\"rememberMe\",onChange:handleRememberMe,checked:rememberMe},\"Remember me\"),/*#__PURE__*/React.createElement(\"a\",{className:\"login-form-forgot\",href:\"/reset_user\",style:{float:'right'}},\"Forgot you password?\"),/*#__PURE__*/React.createElement(\"div\",{style:{paddingTop:\"30px\"}},/*#__PURE__*/React.createElement(\"button\",{type:\"primary\",htmlType:\"submit\",className:\"form-input-btn\",disabled:isSubmitting,onSubmit:handleSubmit,style:{width:\"102%\"}},\"SIGN IN\")),/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},\"Don't have an account? \",/*#__PURE__*/React.createElement(\"a\",{href:\"/register\"},\"Register now!\"))))));});};export default withRouter(LoginPage);","map":{"version":3,"sources":["C:/Users/jau55/git/sleepdeprived/client/src/components/views/LoginPage/LoginPage.js"],"names":["React","useState","withRouter","loginUser","Formik","Yup","Form","Checkbox","Typography","Icon","useDispatch","Title","LoginPage","props","dispatch","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","email","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","loginSuccess","window","setItem","userId","id","removeItem","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","display","marginleft","marginright","paddingleft","outline","borderradius","height","fontSize","border","padding","borderRadius","paddingTop","float","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Checkbox, Typography } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport { useDispatch } from \"react-redux\";\r\nimport '../../App.css';\r\nimport '../../Form.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <p className=\"heading\">Log In</p>\r\n            <form className=\"form\" onSubmit={handleSubmit} style={{ width: '102%' }}>\r\n\r\n              <Form.Item required>\r\n                <label className=\"form-label1\">\r\n                  EMAIL\r\n                </label>\r\n\r\n                <div className=\"form-input\">\r\n                  <input\r\n                    id=\"email\"\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"Enter your email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      marginleft: \"auto\",\r\n                      marginright: \"auto\",\r\n                      paddingleft: \"10px\",\r\n                      outline: \"black\",\r\n                      borderradius: \"2px\",\r\n                      height: \"40px\",\r\n                      width: \"102%\"\r\n                    }}\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div\r\n                      className=\"input-feedback\"\r\n                      style={{\r\n                        color: 'red',\r\n                      }}>\r\n                      {errors.email}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <label className=\"form-label\">\r\n                  PASSWORD\r\n              </label>\r\n\r\n                <div className=\"form-input\">\r\n                  <input\r\n                    id=\"password\"\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"Enter your password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      marginleft: \"auto\",\r\n                      marginright: \"auto\",\r\n                      paddingleft: \"10px\",\r\n                      outline: \"black\",\r\n                      borderradius: \"2px\",\r\n                      height: \"40px\",\r\n                      width: \"102%\"\r\n                    }}\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div\r\n                      className=\"input-feedback\"\r\n                      style={{\r\n                        color: 'red'\r\n                      }}>\r\n                      {errors.password}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <div className=\"form-input\" style={{ paddingTop: \"30px\" }}>\r\n                <Form.Item>\r\n                  <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                  <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                    Forgot you password?\r\n                  </a>\r\n                  <div style={{ paddingTop: \"30px\" }}>\r\n                    <button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"form-input-btn\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={handleSubmit}\r\n                      style={{ width: \"102%\" }}\r\n                    >\r\n                      SIGN IN\r\n                  </button>\r\n                  </div>\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    Don't have an account? <a href=\"/register\">Register now!</a>\r\n                  </div>\r\n                </Form.Item>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}