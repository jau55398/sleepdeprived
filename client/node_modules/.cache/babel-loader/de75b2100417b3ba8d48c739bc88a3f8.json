{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART_USER, GET_CART_ITEMS_USER } from './types';\nimport { USER_SERVER } from '../components/Config.js';\nimport { response } from 'express';\nexport function registerUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/register`, dataToSubmit).then(response => response.data);\n  return {\n    type: REGISTER_USER,\n    payload: request\n  };\n}\nexport function loginUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/login`, dataToSubmit).then(response => response.data);\n  return {\n    type: LOGIN_USER,\n    payload: request\n  };\n}\nexport function auth() {\n  const request = axios.get(`${USER_SERVER}/auth`).then(response => response.data);\n  return {\n    type: AUTH_USER,\n    payload: request\n  };\n}\nexport function logoutUser() {\n  const request = axios.get(`${USER_SERVER}/logout`).then(response => response.data);\n  return {\n    type: LOGOUT_USER,\n    payload: request\n  };\n}\nexport function addToCart(_id) {\n  const request = axios.get(`${USER_SERVER}/addToCart?productId=${_id}`).then(response => response.data);\n  return {\n    type: ADD_TO_CART_USER,\n    payload: request\n  };\n}\nexport function getCartItems(cartItems, userCart) {\n  const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`).then(response => {\n    // redux cart detail\n    userCart.forEach(cartItem => {\n      response.data.forEach((productDetail, i) => {\n        if (cartItem.id === productDetail._id) {\n          response.data[i].quantity = cartItem.quantity;\n        }\n      });\n    });\n    return response.data;\n  });\n  return {\n    type: GET_CART_ITEMS_USER,\n    payload: request\n  };\n}","map":{"version":3,"sources":["C:/Users/jau55/git/gita/sp2020_csc190_team-7/reactproject/client/src/_actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","USER_SERVER","response","registerUser","dataToSubmit","request","post","then","data","type","payload","loginUser","auth","get","logoutUser","addToCart","_id","getCartItems","cartItems","userCart","forEach","cartItem","productDetail","i","id","quantity"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,gBALJ,EAMIC,mBANJ,QAOO,SAPP;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAO,SAASC,YAAT,CAAsBC,YAAtB,EAAoC;AACvC,QAAMC,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAY,GAAEL,WAAY,WAA1B,EAAsCG,YAAtC,EACXG,IADW,CACNL,QAAQ,IAAIA,QAAQ,CAACM,IADf,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEb,aADH;AAEHc,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH;AAED,OAAO,SAASM,SAAT,CAAmBP,YAAnB,EAAiC;AACpC,QAAMC,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAY,GAAEL,WAAY,QAA1B,EAAmCG,YAAnC,EACXG,IADW,CACNL,QAAQ,IAAIA,QAAQ,CAACM,IADf,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEd,UADH;AAEHe,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH;AAED,OAAO,SAASO,IAAT,GAAgB;AACnB,QAAMP,OAAO,GAAGX,KAAK,CAACmB,GAAN,CAAW,GAAEZ,WAAY,OAAzB,EACXM,IADW,CACNL,QAAQ,IAAIA,QAAQ,CAACM,IADf,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEZ,SADH;AAEHa,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH;AAED,OAAO,SAASS,UAAT,GAAsB;AACzB,QAAMT,OAAO,GAAGX,KAAK,CAACmB,GAAN,CAAW,GAAEZ,WAAY,SAAzB,EACXM,IADW,CACNL,QAAQ,IAAIA,QAAQ,CAACM,IADf,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEX,WADH;AAEHY,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH;AAED,OAAO,SAASU,SAAT,CAAmBC,GAAnB,EAAwB;AAC3B,QAAMX,OAAO,GAAGX,KAAK,CAACmB,GAAN,CAAW,GAAEZ,WAAY,wBAAuBe,GAAI,EAApD,EACXT,IADW,CACNL,QAAQ,IAAIA,QAAQ,CAACM,IADf,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEV,gBADH;AAEHW,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH;AACD,OAAO,SAASY,YAAT,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA2C;AAC9C,QAAMd,OAAO,GAAGX,KAAK,CAACmB,GAAN,CAAW,kCAAiCK,SAAU,aAAtD,EACXX,IADW,CACNL,QAAQ,IAAI;AAEd;AACAiB,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,QAAQ,IAAI;AACzBnB,MAAAA,QAAQ,CAACM,IAAT,CAAcY,OAAd,CAAsB,CAACE,aAAD,EAAgBC,CAAhB,KAAsB;AACxC,YAAIF,QAAQ,CAACG,EAAT,KAAgBF,aAAa,CAACN,GAAlC,EAAuC;AACnCd,UAAAA,QAAQ,CAACM,IAAT,CAAce,CAAd,EAAiBE,QAAjB,GAA4BJ,QAAQ,CAACI,QAArC;AACH;AACJ,OAJD;AAKH,KAND;AAOA,WAAOvB,QAAQ,CAACM,IAAhB;AACH,GAZW,CAAhB;AAaA,SAAO;AACHC,IAAAA,IAAI,EAAET,mBADH;AAEHU,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART_USER,\r\n    GET_CART_ITEMS_USER\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\nimport { response } from 'express';\r\n\r\nexport function registerUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addToCart(_id) {\r\n    const request = axios.get(`${USER_SERVER}/addToCart?productId=${_id}`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ADD_TO_CART_USER,\r\n        payload: request\r\n    }\r\n}\r\nexport function getCartItems(cartItems, userCart) {\r\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\r\n        .then(response => {\r\n\r\n            // redux cart detail\r\n            userCart.forEach(cartItem => {\r\n                response.data.forEach((productDetail, i) => {\r\n                    if (cartItem.id === productDetail._id) {\r\n                        response.data[i].quantity = cartItem.quantity;\r\n                    }\r\n                })\r\n            })\r\n            return response.data;\r\n        })\r\n    return {\r\n        type: GET_CART_ITEMS_USER,\r\n        payload: request\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}