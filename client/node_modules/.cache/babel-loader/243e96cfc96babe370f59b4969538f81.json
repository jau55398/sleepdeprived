{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jau55\\\\git\\\\reactproject\\\\client\\\\src\\\\components\\\\views\\\\LoginPage\\\\LoginPage.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Checkbox, Typography } from 'antd';\nimport Icon from '@ant-design/icons';\nimport { useDispatch } from \"react-redux\";\nimport '../../App.css';\nimport '../../Form.css';\nconst {\n  Title\n} = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n  const [formErrorMessage, setFormErrorMessage] = useState('');\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: initialEmail,\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password\n        };\n        dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            window.localStorage.setItem('userId', response.payload.userId);\n\n            if (rememberMe === true) {\n              window.localStorage.setItem('rememberMe', values.id);\n            } else {\n              localStorage.removeItem('rememberMe');\n            }\n\n            props.history.push(\"/\");\n          } else {\n            setFormErrorMessage('Check out your Account or Password again');\n          }\n        }).catch(err => {\n          setFormErrorMessage('Check out your Account or Password again');\n          setTimeout(() => {\n            setFormErrorMessage(\"\");\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      style: {\n        width: '102%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"EMAIL\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }),\n      placeholder: \"Enter your email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        display: \"inline-block\",\n        marginleft: \"auto\",\n        marginright: \"auto\",\n        paddingleft: \"10px\",\n        outline: \"black\",\n        borderradius: \"2px\",\n        height: \"40px\",\n        width: \"102%\"\n      },\n      className: errors.email && touched.email ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, errors.email))), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password\",\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }),\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        display: \"inline-block\",\n        marginleft: \"auto\",\n        marginright: \"auto\",\n        paddingleft: \"10px\",\n        outline: \"black\",\n        borderradius: \"2px\",\n        height: \"40px\",\n        width: \"102%\"\n      },\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, errors.password))), formErrorMessage && /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: '#ff0000bf',\n        fontSize: '0.7rem',\n        border: '1px solid',\n        padding: '1rem',\n        borderRadius: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, formErrorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input\",\n      style: {\n        paddingTop: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      id: \"rememberMe\",\n      onChange: handleRememberMe,\n      checked: rememberMe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, \"Remember me\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"/reset_user\",\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"Forgot you password?\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"form-input-btn\",\n      disabled: isSubmitting,\n      onSubmit: handleSubmit,\n      style: {\n        width: \"102%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"SIGN IN\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \"Don't have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 44\n      }\n    }, \"Register now!\"))))));\n  });\n}\n\n;\nexport default withRouter(LoginPage);","map":{"version":3,"sources":["C:/Users/jau55/git/reactproject/client/src/components/views/LoginPage/LoginPage.js"],"names":["React","useState","withRouter","loginUser","Formik","Yup","Form","Checkbox","Typography","Icon","useDispatch","Title","LoginPage","props","dispatch","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","email","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","loginSuccess","window","setItem","userId","id","removeItem","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","display","marginleft","marginright","paddingleft","outline","borderradius","height","fontSize","border","padding","borderRadius","paddingTop","float","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Checkbox, Typography } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport { useDispatch } from \"react-redux\";\r\nimport '../../App.css';\r\nimport '../../Form.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <p className=\"heading\">Log In</p>\r\n            <form className=\"form\" onSubmit={handleSubmit} style={{ width: '102%' }}>\r\n\r\n              <Form.Item required>\r\n                <label className=\"form-label1\">\r\n                  EMAIL\r\n                </label>\r\n\r\n                <div className=\"form-input\">\r\n                  <input\r\n                    id=\"email\"\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"Enter your email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      marginleft: \"auto\",\r\n                      marginright: \"auto\",\r\n                      paddingleft: \"10px\",\r\n                      outline: \"black\",\r\n                      borderradius: \"2px\",\r\n                      height: \"40px\",\r\n                      width: \"102%\"\r\n                    }}\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div\r\n                      className=\"input-feedback\"\r\n                      style={{\r\n                        color: 'red',\r\n                      }}>\r\n                      {errors.email}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <label className=\"form-label\">\r\n                  PASSWORD\r\n              </label>\r\n\r\n                <div className=\"form-input\">\r\n                  <input\r\n                    id=\"password\"\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"Enter your password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      marginleft: \"auto\",\r\n                      marginright: \"auto\",\r\n                      paddingleft: \"10px\",\r\n                      outline: \"black\",\r\n                      borderradius: \"2px\",\r\n                      height: \"40px\",\r\n                      width: \"102%\"\r\n                    }}\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div\r\n                      className=\"input-feedback\"\r\n                      style={{\r\n                        color: 'red'\r\n                      }}>\r\n                      {errors.password}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <div className=\"form-input\" style={{ paddingTop: \"30px\" }}>\r\n                <Form.Item>\r\n                  <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                  <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                    Forgot you password?\r\n                  </a>\r\n                  <div style={{ paddingTop: \"30px\" }}>\r\n                    <button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"form-input-btn\"\r\n                      disabled={isSubmitting}\r\n                      onSubmit={handleSubmit}\r\n                      style={{ width: \"102%\" }}\r\n                    >\r\n                      SIGN IN\r\n                  </button>\r\n                  </div>\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    Don't have an account? <a href=\"/register\">Register now!</a>\r\n                  </div>\r\n                </Form.Item>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}