{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jau55\\\\git\\\\reactproject\\\\client\\\\src\\\\components\\\\views\\\\UploadProductPage\\\\UploadProduct.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport FileUpload from '../../utils/FileUpload';\nimport Axios from 'axios';\n\nfunction UploadProduct(props) {\n  const Category = [{\n    keys: 1,\n    value: \"All\"\n  }];\n  const [NameValue, setNameValue] = useState(\"\");\n  const [DescriptionValue, setDescriptionValue] = useState(\"\");\n  const [PriceValue, setPriceValue] = useState(0);\n  const [CategoryValue, setCategoryValue] = useState(1);\n  const [Images, setImages] = useState([]);\n  const [Sizes, setSizes] = useState(\"\");\n  const [Colors, setColors] = useState(\"\");\n  const [Material, setMaterial] = useState(\"\");\n  const [Quantity, setQuantity] = useState(\"\");\n\n  const onNameChange = event => {\n    setNameValue(event.currentTarget.value);\n  };\n\n  const onDescriptionChange = event => {\n    setDescriptionValue(event.currentTarget.value);\n  };\n\n  const onPriceChange = event => {\n    setPriceValue(event.currentTarget.value);\n  };\n\n  const onCategoryChange = event => {\n    setCategoryValue(event.currentTarget.value);\n  };\n\n  const updateImages = newImages => {\n    console.log(newImages);\n    setImages(newImages);\n  }; // new part of schema tesing 11/22/20\n\n\n  const onSizeChange = event => {\n    setSizes(event.currentTarget.value);\n    console.log(Sizes);\n  };\n\n  const onMaterialChange = event => {\n    setMaterial(event.currentTarget.value);\n  };\n\n  const onChangeColor = event => {\n    setColors(event.currentTarget.value);\n  };\n\n  const onQuantityChange = event => {\n    setQuantity(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (!NameValue || !DescriptionValue || !PriceValue || !CategoryValue || !Images) {\n      return alert('fill all the fields first!');\n    }\n\n    const variables = {\n      writer: props.user.userData._id,\n      product_name: NameValue,\n      description: DescriptionValue,\n      price: PriceValue,\n      images: Images,\n      category: CategoryValue,\n      sizes: Sizes,\n      colors: Colors,\n      quantity: Quantity,\n      material: Material\n    };\n    Axios.post('/api/product/uploadProduct', variables).then(response => {\n      if (response.data.success) {\n        alert('Product Successfully Uploaded');\n        props.history.push('/');\n      } else {\n        alert('Failed to upload Product');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Product Upload\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FileUpload, {\n    style: {},\n    refreshFunction: updateImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: \"left\",\n      width: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"SIZES\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"upload-input\",\n    onChange: onSizeChange,\n    value: Sizes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"QUANTITY\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"upload-input\",\n    onChange: onQuantityChange,\n    value: Quantity,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"PRICE\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"upload-input\",\n    onChange: onPriceChange,\n    value: PriceValue,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"CATEGORY\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"upload-input\",\n    onChange: onCategoryChange,\n    value: CategoryValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, Category.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.key,\n    value: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, item.value, \" \"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"NAME\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"upload-input\",\n    onChange: onNameChange,\n    value: NameValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"DESCRIPTION\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"upload-input\",\n    style: {\n      minHeight: \"40px\",\n      maxHeight: \"100px\"\n    },\n    onChange: onDescriptionChange,\n    value: DescriptionValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"COLORS\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"upload-input\",\n    onChange: onChangeColor,\n    value: Colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"MATERIAL\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"upload-input\",\n    onChange: onMaterialChange,\n    value: Material,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginLeft: \"30%\"\n    },\n    className: \"form-input-btn\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nexport default UploadProduct;","map":{"version":3,"sources":["C:/Users/jau55/git/reactproject/client/src/components/views/UploadProductPage/UploadProduct.js"],"names":["React","useState","FileUpload","Axios","UploadProduct","props","Category","keys","value","NameValue","setNameValue","DescriptionValue","setDescriptionValue","PriceValue","setPriceValue","CategoryValue","setCategoryValue","Images","setImages","Sizes","setSizes","Colors","setColors","Material","setMaterial","Quantity","setQuantity","onNameChange","event","currentTarget","onDescriptionChange","onPriceChange","onCategoryChange","updateImages","newImages","console","log","onSizeChange","onMaterialChange","onChangeColor","onQuantityChange","onSubmit","preventDefault","alert","variables","writer","user","userData","_id","product_name","description","price","images","category","sizes","colors","quantity","material","post","then","response","data","success","history","push","maxWidth","margin","float","width","map","item","key","minHeight","maxHeight","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport FileUpload from '../../utils/FileUpload'\r\nimport Axios from 'axios'\r\nfunction UploadProduct(props) {\r\n\r\n    const Category = [\r\n        { keys: 1, value: \"All\" },\r\n    ]\r\n\r\n    const [NameValue, setNameValue] = useState(\"\")\r\n    const [DescriptionValue, setDescriptionValue] = useState(\"\")\r\n    const [PriceValue, setPriceValue] = useState(0)\r\n    const [CategoryValue, setCategoryValue] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    const [Sizes, setSizes] = useState(\"\")\r\n    const [Colors, setColors] = useState(\"\")\r\n    const [Material, setMaterial] = useState(\"\")\r\n    const [Quantity, setQuantity] = useState(\"\")\r\n\r\n    const onNameChange = (event) => {\r\n        setNameValue(event.currentTarget.value)\r\n    }\r\n    const onDescriptionChange = (event) => {\r\n        setDescriptionValue(event.currentTarget.value)\r\n    }\r\n    const onPriceChange = (event) => {\r\n        setPriceValue(event.currentTarget.value)\r\n    }\r\n    const onCategoryChange = (event) => {\r\n        setCategoryValue(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        console.log(newImages)\r\n        setImages(newImages)\r\n    }\r\n\r\n    // new part of schema tesing 11/22/20\r\n    const onSizeChange = (event) => {\r\n        setSizes(event.currentTarget.value)\r\n        console.log(Sizes)\r\n    }\r\n    const onMaterialChange = (event) => {\r\n        setMaterial(event.currentTarget.value)\r\n    }\r\n    const onChangeColor = (event) => {\r\n        setColors(event.currentTarget.value)\r\n    }\r\n    const onQuantityChange = (event) => {\r\n        setQuantity(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!NameValue || !DescriptionValue || !PriceValue ||\r\n            !CategoryValue || !Images) {\r\n            return alert('fill all the fields first!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: props.user.userData._id,\r\n            product_name: NameValue,\r\n            description: DescriptionValue,\r\n            price: PriceValue,\r\n            images: Images,\r\n            category: CategoryValue,\r\n            sizes: Sizes,\r\n            colors: Colors,\r\n            quantity: Quantity,\r\n            material: Material\r\n        }\r\n\r\n        Axios.post('/api/product/uploadProduct', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('Product Successfully Uploaded')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('Failed to upload Product')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto'}}>\r\n            <p className=\"heading\">Product Upload</p>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <FileUpload\r\n                    style={{}}\r\n                    refreshFunction={updateImages}>\r\n\r\n                </FileUpload>\r\n            </form>\r\n            <br />\r\n            <br />\r\n\r\n            <div style={{\r\n                float: \"left\",\r\n                width: \"200px\"\r\n            }}>\r\n\r\n                <label className=\"upload-label\">SIZES</label>\r\n                <input\r\n                    className=\"upload-input\"\r\n                    onChange={onSizeChange}\r\n                    value={Sizes}\r\n                ></input>\r\n                <br />\r\n                <label className=\"upload-label\">QUANTITY</label>\r\n                <input\r\n                    className=\"upload-input\"\r\n                    onChange={onQuantityChange}\r\n                    value={Quantity}\r\n                    type=\"number\"\r\n                ></input>\r\n                <br />\r\n                <label className=\"upload-label\">PRICE</label>\r\n                <input\r\n                    className=\"upload-input\"\r\n                    onChange={onPriceChange}\r\n                    value={PriceValue}\r\n                    type=\"number\"\r\n                ></input>\r\n                <br />\r\n\r\n                <label className=\"upload-label\">CATEGORY</label>\r\n                <select\r\n                    className=\"upload-input\"\r\n                    onChange={onCategoryChange}\r\n                    value={CategoryValue}>\r\n\r\n                    {Category.map(item => (\r\n                        <option key={item.key} value={item.key}>{item.value} </option>\r\n                    ))}\r\n\r\n                </select>\r\n                <br />\r\n            </div>\r\n\r\n            <label className=\"upload-label-right\">NAME</label>\r\n            <input\r\n                className=\"upload-input\"\r\n                onChange={onNameChange}\r\n                value={NameValue}\r\n            ></input>\r\n            <br />\r\n\r\n            <label className=\"upload-label-right\">DESCRIPTION</label>\r\n            <textarea\r\n                className=\"upload-input\"\r\n                style={{minHeight:\"40px\", maxHeight:\"100px\"}}\r\n                onChange={onDescriptionChange}\r\n                value={DescriptionValue}\r\n            ></textarea>\r\n            <br />\r\n            <label className=\"upload-label-right\">COLORS</label>\r\n            <input\r\n                className=\"upload-input\"\r\n                onChange={onChangeColor}\r\n                value={Colors}\r\n            ></input>\r\n            <br />\r\n\r\n            <label className=\"upload-label-right\">MATERIAL</label>\r\n            <input\r\n                className=\"upload-input\"\r\n                onChange={onMaterialChange}\r\n                value={Material}\r\n            ></input>\r\n            <br />\r\n\r\n            <div>\r\n                <button\r\n                    style={{marginLeft: \"30%\"}}\r\n                    className=\"form-input-btn\"\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n} export default UploadProduct;"]},"metadata":{},"sourceType":"module"}